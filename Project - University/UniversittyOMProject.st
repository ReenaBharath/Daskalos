<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.4.1 of May 30, 2006 on April 25, 2024 at 4:25:57 pm</time-stamp>


<class>
<name>University</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>universityName address email contact </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>University class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#address -&gt; Core.String); add: (#contact -&gt; Core.Number); add: (#universityName -&gt; Core.String); add: (#email -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>University</class-id>
<body>This class implements instances, which stores data about University which as a subclass Course</body>
</comment>

<methods>
<class-id>University</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="address">address
"generated by Daskalos"

     ^address</body>

<body package="DaskalosUserClasses" selector="address:">address: anObject
"generated by Daskalos"

     address := (self checkValue: anObject forVariable: #address)</body>

<body package="DaskalosUserClasses" selector="contact">contact
"generated by Daskalos"

     ^contact</body>

<body package="DaskalosUserClasses" selector="contact:">contact: anObject
"generated by Daskalos"

     contact := (self checkValue: anObject forVariable: #contact)</body>

<body package="DaskalosUserClasses" selector="email">email
"generated by Daskalos"

     ^email</body>

<body package="DaskalosUserClasses" selector="email:">email: anObject
"generated by Daskalos"

     email := (self checkValue: anObject forVariable: #email)</body>

<body package="DaskalosUserClasses" selector="universityName">universityName
"generated by Daskalos"

     ^universityName</body>

<body package="DaskalosUserClasses" selector="universityName:">universityName: anObject
"generated by Daskalos"

     universityName := (self checkValue: anObject forVariable: #universityName)</body>
</methods>

<methods>
<class-id>University</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     universityName := nil.
     address := nil.
     email := nil.
     contact := nil.
</body>
</methods>


<class>
<name>Course</name>
<environment>Smalltalk</environment>
<super>University</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>type name length fee </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Course class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#name -&gt; Core.String); add: (#fee -&gt; Core.Number); add: (#type -&gt; Core.String); add: (#universityName -&gt; Core.String); add: (#contact -&gt; Core.Number); add: (#length -&gt; Core.Number); add: (#address -&gt; Core.String); add: (#email -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Course</class-id>
<body>This class implements instances, which stores data about Course offered in University</body>
</comment>

<methods>
<class-id>Course</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="fee">fee
"generated by Daskalos"

     ^fee</body>

<body package="DaskalosUserClasses" selector="fee:">fee: anObject
"generated by Daskalos"

     fee := (self checkValue: anObject forVariable: #fee)</body>

<body package="DaskalosUserClasses" selector="length">length
"generated by Daskalos"

     ^length</body>

<body package="DaskalosUserClasses" selector="length:">length: anObject
"generated by Daskalos"

     length := (self checkValue: anObject forVariable: #length)</body>

<body package="DaskalosUserClasses" selector="name">name
"generated by Daskalos"

     ^name</body>

<body package="DaskalosUserClasses" selector="name:">name: anObject
"generated by Daskalos"

     name := (self checkValue: anObject forVariable: #name)</body>

<body package="DaskalosUserClasses" selector="type">type
"generated by Daskalos"

     ^type</body>

<body package="DaskalosUserClasses" selector="type:">type: anObject
"generated by Daskalos"

     type := (self checkValue: anObject forVariable: #type)</body>
</methods>

<methods>
<class-id>Course</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     type := nil.
     name := nil.
     length := nil.
     fee := nil.
</body>
</methods>

<methods>
<class-id>Course</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="getfees">getfees
	| fm1 fm2 |
	fm1 := 'Expensive'.
	fm2 := 'Cheap'.
	fee &gt; 21000 ifTrue: [^fm1] ifFalse: [^fm2]</body>
</methods>


<class>
<name>Teacher</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>firstName surName id experience salary teach </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Teacher class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#surName -&gt; Core.String); add: (#firstName -&gt; Core.String); add: (#id -&gt; Core.Number); add: (#salary -&gt; Core.Number); add: (#experience -&gt; Core.Number); add: (#teach -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Teacher</class-id>
<body>This class implements instances, which stores data about Teachers</body>
</comment>

<methods>
<class-id>Teacher</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="experience">experience
"generated by Daskalos"

     ^experience</body>

<body package="DaskalosUserClasses" selector="experience:">experience: anObject
"generated by Daskalos"

     experience := (self checkValue: anObject forVariable: #experience)</body>

<body package="DaskalosUserClasses" selector="firstName">firstName
"generated by Daskalos"

     ^firstName</body>

<body package="DaskalosUserClasses" selector="firstName:">firstName: anObject
"generated by Daskalos"

     firstName := (self checkValue: anObject forVariable: #firstName)</body>

<body package="DaskalosUserClasses" selector="id">id
"generated by Daskalos"

     ^id</body>

<body package="DaskalosUserClasses" selector="id:">id: anObject
"generated by Daskalos"

     id := (self checkValue: anObject forVariable: #id)</body>

<body package="DaskalosUserClasses" selector="salary">salary
"generated by Daskalos"

     ^salary</body>

<body package="DaskalosUserClasses" selector="salary:">salary: anObject
"generated by Daskalos"

     salary := (self checkValue: anObject forVariable: #salary)</body>

<body package="DaskalosUserClasses" selector="surName">surName
"generated by Daskalos"

     ^surName</body>

<body package="DaskalosUserClasses" selector="surName:">surName: anObject
"generated by Daskalos"

     surName := (self checkValue: anObject forVariable: #surName)</body>

<body package="DaskalosUserClasses" selector="teach">teach
"generated by Daskalos"

     ^teach</body>

<body package="DaskalosUserClasses" selector="teach:">teach: anObject
"generated by Daskalos"

     teach := (self checkValue: anObject forVariable: #teach)</body>
</methods>

<methods>
<class-id>Teacher</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     firstName := nil.
     surName := nil.
     id := nil.
     experience := nil.
     salary := nil.
     teach := nil.
</body>
</methods>

<methods>
<class-id>Teacher</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="salaryRange">salaryRange
	| sm1 sm2 |
	sm1 := 'Good'.
	sm2 := 'Average'.
	salary &gt; 20000 ifTrue: [^sm1] ifFalse: [^sm2]</body>

<body package="DaskalosUserClasses" selector="training">training
	| tm1 tm2 |
	tm1 := 'No Training Needed'.
	tm2 := 'Training Needed'.
	experience &gt; 2 ifTrue: [^tm1] ifFalse: [^tm2]</body>
</methods>


<class>
<name>Student</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>firstName surName id bankDetails learn schoolScores </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Student class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#schoolScores -&gt; Core.Number); add: (#surName -&gt; Core.String); add: (#firstName -&gt; Core.String); add: (#id -&gt; Core.Number); add: (#learn -&gt; Core.Object); add: (#bankDetails -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<comment>
<class-id>Student</class-id>
<body>This class implements instances, which stores data about Students</body>
</comment>

<methods>
<class-id>Student</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="bankDetails">bankDetails
"generated by Daskalos"

     ^bankDetails</body>

<body package="DaskalosUserClasses" selector="bankDetails:">bankDetails: anObject
"generated by Daskalos"

     bankDetails := (self checkValue: anObject forVariable: #bankDetails)</body>

<body package="DaskalosUserClasses" selector="firstName">firstName
"generated by Daskalos"

     ^firstName</body>

<body package="DaskalosUserClasses" selector="firstName:">firstName: anObject
"generated by Daskalos"

     firstName := (self checkValue: anObject forVariable: #firstName)</body>

<body package="DaskalosUserClasses" selector="id">id
"generated by Daskalos"

     ^id</body>

<body package="DaskalosUserClasses" selector="id:">id: anObject
"generated by Daskalos"

     id := (self checkValue: anObject forVariable: #id)</body>

<body package="DaskalosUserClasses" selector="learn">learn
"generated by Daskalos"

     ^learn</body>

<body package="DaskalosUserClasses" selector="learn:">learn: anObject
"generated by Daskalos"

     learn := (self checkValue: anObject forVariable: #learn)</body>

<body package="DaskalosUserClasses" selector="schoolScores">schoolScores
"generated by Daskalos"

     ^schoolScores</body>

<body package="DaskalosUserClasses" selector="schoolScores:">schoolScores: anObject
"generated by Daskalos"

     schoolScores := (self checkValue: anObject forVariable: #schoolScores)</body>

<body package="DaskalosUserClasses" selector="surName">surName
"generated by Daskalos"

     ^surName</body>

<body package="DaskalosUserClasses" selector="surName:">surName: anObject
"generated by Daskalos"

     surName := (self checkValue: anObject forVariable: #surName)</body>
</methods>

<methods>
<class-id>Student</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     firstName := nil.
     surName := nil.
     id := nil.
     bankDetails := nil.
     learn := nil.
     schoolScores := nil.
</body>
</methods>

<methods>
<class-id>Student</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="previousScores">previousScores
	| pm1 pm2 |
	pm1 := 'Good'.
	pm2 := 'Average'.
	schoolScores &gt; 50 ifTrue: [^pm1] ifFalse: [^pm2]</body>
</methods>


</st-source>
