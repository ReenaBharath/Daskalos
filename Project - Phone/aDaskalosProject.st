<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.4.1 of May 30, 2006 on April 25, 2024 at 4:25:19 pm</time-stamp>


<class>
<name>PhoneStore</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>name contact address </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>PhoneStore class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#contact -&gt; Core.Number); add: (#address -&gt; Core.String); add: (#name -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>PhoneStore</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="address">address
"generated by Daskalos"

     ^address</body>

<body package="DaskalosUserClasses" selector="address:">address: anObject
"generated by Daskalos"

     address := (self checkValue: anObject forVariable: #address)</body>

<body package="DaskalosUserClasses" selector="contact">contact
"generated by Daskalos"

     ^contact</body>

<body package="DaskalosUserClasses" selector="contact:">contact: anObject
"generated by Daskalos"

     contact := (self checkValue: anObject forVariable: #contact)</body>

<body package="DaskalosUserClasses" selector="name">name
"generated by Daskalos"

     ^name</body>

<body package="DaskalosUserClasses" selector="name:">name: anObject
"generated by Daskalos"

     name := (self checkValue: anObject forVariable: #name)</body>
</methods>

<methods>
<class-id>PhoneStore</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     name := nil.
     contact := nil.
     address := nil.
</body>
</methods>


<class>
<name>ModelPhone</name>
<environment>Smalltalk</environment>
<super>PhoneStore</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>brandName brandCamera brandBattery soledBy </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>ModelPhone class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#name -&gt; Core.String); add: (#address -&gt; Core.String); add: (#contact -&gt; Core.Number); add: (#brandBattery -&gt; Core.String); add: (#brandCamera -&gt; Core.String); add: (#soledBy -&gt; Core.Object); add: (#brandName -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>ModelPhone</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="brandBattery">brandBattery
"generated by Daskalos"

     ^brandBattery</body>

<body package="DaskalosUserClasses" selector="brandBattery:">brandBattery: anObject
"generated by Daskalos"

     brandBattery := (self checkValue: anObject forVariable: #brandBattery)</body>

<body package="DaskalosUserClasses" selector="brandCamera">brandCamera
"generated by Daskalos"

     ^brandCamera</body>

<body package="DaskalosUserClasses" selector="brandCamera:">brandCamera: anObject
"generated by Daskalos"

     brandCamera := (self checkValue: anObject forVariable: #brandCamera)</body>

<body package="DaskalosUserClasses" selector="brandName">brandName
"generated by Daskalos"

     ^brandName</body>

<body package="DaskalosUserClasses" selector="brandName:">brandName: anObject
"generated by Daskalos"

     brandName := (self checkValue: anObject forVariable: #brandName)</body>

<body package="DaskalosUserClasses" selector="soledBy">soledBy
"generated by Daskalos"

     ^soledBy</body>

<body package="DaskalosUserClasses" selector="soledBy:">soledBy: anObject
"generated by Daskalos"

     soledBy := (self checkValue: anObject forVariable: #soledBy)</body>
</methods>

<methods>
<class-id>ModelPhone</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     brandName := nil.
     brandCamera := nil.
     brandBattery := nil.
     soledBy := nil.
</body>
</methods>


<class>
<name>Customer</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>firstName surName age bought </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Customer class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#firstName -&gt; Core.String); add: (#age -&gt; Core.Number); add: (#surName -&gt; Core.String); add: (#bought -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Customer</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="age">age
"generated by Daskalos"

     ^age</body>

<body package="DaskalosUserClasses" selector="age:">age: anObject
"generated by Daskalos"

     age := (self checkValue: anObject forVariable: #age)</body>

<body package="DaskalosUserClasses" selector="bought">bought
"generated by Daskalos"

     ^bought</body>

<body package="DaskalosUserClasses" selector="bought:">bought: anObject
"generated by Daskalos"

     bought := (self checkValue: anObject forVariable: #bought)</body>

<body package="DaskalosUserClasses" selector="firstName">firstName
"generated by Daskalos"

     ^firstName</body>

<body package="DaskalosUserClasses" selector="firstName:">firstName: anObject
"generated by Daskalos"

     firstName := (self checkValue: anObject forVariable: #firstName)</body>

<body package="DaskalosUserClasses" selector="surName">surName
"generated by Daskalos"

     ^surName</body>

<body package="DaskalosUserClasses" selector="surName:">surName: anObject
"generated by Daskalos"

     surName := (self checkValue: anObject forVariable: #surName)</body>
</methods>

<methods>
<class-id>Customer</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     firstName := nil.
     surName := nil.
     age := nil.
     bought := nil.
</body>
</methods>

<methods>
<class-id>Customer</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="getage">getage
	| am1 am2 |
	am1 := 'Old'.
	am2 := 'Young'.
	age &gt; 40 ifTrue: [^am1] ifFalse: [^am2]</body>
</methods>


<class>
<name>Employee</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>firstName surName id salary soledTo </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Employee class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#firstName -&gt; Core.String); add: (#id -&gt; Core.Number); add: (#surName -&gt; Core.String); add: (#salary -&gt; Core.Number); add: (#soledTo -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Employee</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="firstName">firstName
"generated by Daskalos"

     ^firstName</body>

<body package="DaskalosUserClasses" selector="firstName:">firstName: anObject
"generated by Daskalos"

     firstName := (self checkValue: anObject forVariable: #firstName)</body>

<body package="DaskalosUserClasses" selector="id">id
"generated by Daskalos"

     ^id</body>

<body package="DaskalosUserClasses" selector="id:">id: anObject
"generated by Daskalos"

     id := (self checkValue: anObject forVariable: #id)</body>

<body package="DaskalosUserClasses" selector="salary">salary
"generated by Daskalos"

     ^salary</body>

<body package="DaskalosUserClasses" selector="salary:">salary: anObject
"generated by Daskalos"

     salary := (self checkValue: anObject forVariable: #salary)</body>

<body package="DaskalosUserClasses" selector="soledTo">soledTo
"generated by Daskalos"

     ^soledTo</body>

<body package="DaskalosUserClasses" selector="soledTo:">soledTo: anObject
"generated by Daskalos"

     soledTo := (self checkValue: anObject forVariable: #soledTo)</body>

<body package="DaskalosUserClasses" selector="surName">surName
"generated by Daskalos"

     ^surName</body>

<body package="DaskalosUserClasses" selector="surName:">surName: anObject
"generated by Daskalos"

     surName := (self checkValue: anObject forVariable: #surName)</body>
</methods>

<methods>
<class-id>Employee</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     firstName := nil.
     surName := nil.
     id := nil.
     salary := nil.
     soledTo := nil.
</body>
</methods>

<methods>
<class-id>Employee</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="salaryRange">salaryRange
	| sm1 sm2 |
	sm1 := 'Good'.
	sm2 := 'Average'.
	salary &gt; 20000 ifTrue: [^sm1] ifFalse: [^sm2]</body>

<body package="DaskalosUserClasses" selector="soledProducts">soledProducts
	^ModelPhone allInstances select: [:x | x soledBy = self]</body>
</methods>


</st-source>
